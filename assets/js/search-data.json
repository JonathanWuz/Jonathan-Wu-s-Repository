{
  
    
        "post0": {
            "title": "N@TM Blog Posrt",
            "content": "Overview . Del Norte High School holds an event called Night at The Museum which allows students to show off their artistic work. For example, the art class may show off their art pieces and the ceramics students may show off their pottery. For AP Computer Science students, we are demonstrating our programs/projects that we’ve been working on. It allows them to display the hard work they have put in the previous few months. . Unfourtanetly, I was unable to participate in N@TM on that day and thus my goal was to: create a similar Night at The Museum event at home and with my friends. This way I could still show off my work and demonstrate my knowledge. By creating a similar enviroment at home, I can still present my project. | Show off my project to friends and family. Over the break, I tried to get as many viewers as possible to view my project. SOme of these people include my family members. I also shared my project with some of my friends, some of which have taken computer science principles or have cs knowledge. They gave me useful tips on how to improve my program/feature. | I also wanted to explore other people’s projects outside of the realm of computer science. So I invited my friend Derrick who has taken 3D Animation and asked him to show off his project. This made it so my N@TM experience was not just me showing off my feature but also exploring other artistic projects. | | . Presenting at N@TM . Side Note . I got to show off my program to so many people that I got carried away and forgot to take pictures and record them. However, it is the experience that counts, not the recording of it. | The first person I showed my program off to was Andrew Reid who just so happened to be available and at school on the day of N@TM. So I ran my program and tried to explain my code. However, I realized that besides the functionality of my program, Andrew had trouble understanding the code behind the scenes. Words like “databases”, “CRUD”, “API”, etc. were all terms that weren’t easy to comprehend. However, he still enjoyed my presentation and I enjoyed my first trial of N@TM. | The next person I presented to was Derrick Huang. This time I tried to incorporate more friendly language and a simpler explanation of my feature. After showing off the program itself, I presented the code in categories: frontend, backend, and model. I explained how each one was connected to each other but I may have generalized things too much because although Derrick was getting it, there were several important code blocks that I glossed over. So I learned that in future presentations I needed to use simple language but also delve deep into my project’s many components. | I then presented to several more people and each presentation seemed to be better than the last. Finally, I showed off my project to my mom going through my project and the behind the scenes code in depth but also clearly. However, my mom was not impressed and suggested that I incorporate more complexity to my code which I did by adding a purchase feature. | Ultimately, prsenting my project with my makeshift N@TM was a lot of fun as I got to show off my last few week’s of hard work. And I also got some helpful advice to improve my program which I was very grateful for. | . Looking at Other Projects . I wasn’t able to see many projects due to my predicament. Many of my friends did not participate in N@TM and of the ones that did, many of them weren’t able to access their projects. However, I was able to view my friend, Derrick Huang’s, 3D animation project. In his project, his purpose was to 3D animate a donut and add additional, creative features around it. . He explained that some people put donuts on a table and put a plant next to it or put it on a car. In any case, the emphasis was on the donut. I was particularly interested in this project because I have experience in art but have never dealt with 3D animation. It was something interesting and something that I wanted to learn. . Derrick showed me his project and it was a decorative donut on a plate with a cup of coffee in the background. There was also a purple brick wall in the back which contrasted the colors of the donut and coffee. Derrick revealed how he did this in order to place emphasis on the main subject, the donut. I found this very fascinating. He also explained how the hardest thing about his project was managing the sprinkles because they would often be displaced and would thus look wonky on the donut. He told me that to solve this, he used filling which filled in a lot of the spaces where sprinkles normally shouldn’t be. It made it easier to put the sprinkles on the donut. . Reflection . Although I wasn’t able to go to the actual Night at The Museum, I was still able to create a similar envirment and have a lot of fun. One unfortunate thing I experienced ws being unable to view other people’s project but I believe there are some greater benefits such as being able to present my project to the people close to me. Through the feedback and experience I gained, I was able to gain futher insights to improve my project. Still prefer Track &amp; Field meets though! .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/28/N@TM-Blog-Post.html",
            "relUrl": "/markdown/2023/02/28/N@TM-Blog-Post.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "N@TM Blog Posrt",
            "content": "Write-Up (Marketplace) . 3a . 3.a.i. . This program is meant to provide a more streamline system for business managers to organize and locate their company’s inventory. . 3.a.ii. . This program allows a user to not only input entries regarding various attributes of their company’s inventory, such as the price of the product, how much it costs to produce, how long it takes to deliver, the quantity, and any other extra notes. The user does this by first defining under what company name this inventory goes under. This is useful because the feature also allows a search feature, where a user may type in the name of a specific company, and any entries made under that name will appear in a neat, organized table that displays each attribute. These entries are all persistent as well, so even if the page is closed and reopened, the entries remain. . 3.a.iii. . The inputs of the program are the user’s typed entries into the form for which entries are made. The program collects this data and returns an input stating whether or not the inventory was successfully added - depending on if the user’s entries met the requirements such as filling out all fields - and then may be called upon to displays its entries within the search feature that neatly formats the attributes in a table. . 3.b . 3.b.i. . . 3.b.ii. . . 3.b.iii. . The variables stored are titled respectively through the form box. They are titled product, cost, and stock. There is also ID which is set to current time value. . 3.b.iv. . All the variable in my list ar important to my program because they represent unique and necessary aspects of a product such as it’s name, cost, and how much of the product you have aka stock. It is necessary in order to take read and create data. . 3.b.v . By storing the variables respectively, I manage complexity by preventing duplicate or mistaken values. If my values were the same, I would have conflicting values in my database which would likely lead to it being disfunctional. To fix this through a different method, I would have to lengthen my code and make it more complex. . 3.c . 3.c.i. . . 3.c.ii. . . 3.c.iii. . The procedure here is addProduct. It retrieves the user input from the formboxes. When the ‘click’ is made on each respective button the input from the user is stored and placed into a database which is then displayed within the input field. Also, the program gets elements by their id which is product, cost, and stock respectively. . 3.c.i.v . The code defines a function addProduct which starts by collecting input data from a web form using document.getElementById. The function then proceeds to use selection to check if the username field is empty, and if it is, it displays an alert to the user and returns from the function. If the username field is not empty, the function constructs a data object using sequencing, which contains the input values collected earlier. The function then constructs a requestOptions object also using sequencing which includes the data object, and specifies the HTTP method and content type headers for a POST request. The function then uses iteration, in the form of a try-catch block, to handle errors that may occur during the fetch request. Finally, the function uses fetch to send a POST request to a specified URL and logs the success response to the console, as well as displaying an alert to the user. . 3.d . 3.d.i . The user inputs the attributes of their desired inventory and clicks on the “addProduct” button. The first call to addProduct procedure passes a command to get and store user input into the system. This call will execute the entire algorithm, constructing the data object, constructing the requestOptions object, and sending a POST request to the specified URL with the data object as the request body. If the request is successful, a success message will be logged to the console and an alert will be shown to the user indicating that the inventory has been added. . 3.d.ii . Conditions for user input manages the garbage within our program. THese conditions are enforced by the placeholders. These make sure user input match the requested structure so that no false input goes in. Another way garbage is managed is through the second last command. It enforces that there is something to call back to. .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/28/CPT-Write-Up.html",
            "relUrl": "/markdown/2023/02/28/CPT-Write-Up.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "CPT Outline",
            "content": "Reporting Category Scoring Criteria Decision Rules . Row 1 Program Purpose and Function | My program demonstrates the following: - input, program functionality, and output. Additionally, the overall purpose is clear and the functionality of the program is demonstrated. | The video shows a demonstration of the program running and the described purpose is actually the functionality of the program. The purpose is actually the functionality of the program. The purpose adresses the problem being solved. | . Row 2 Data Abstraction | I will include two program code segments: one that shows how data has been stored in this list (or other collection type), Additionally, It will show the data in the same list being used as part of fullfilling the program’s purpose. I also identify the name of the variable representing the list being used in the response. | Requirements for program code segments: The written response must include two clearly distinguishable program code segments, but these segments may be disjointed code segments or two parts of a contiguous code segment. All of which I already have in my CPT feature. | . Row 3 Managing Complexity | My program manages complexity by including code segments that show a list being used to manage complexity. Also, I can reveal exactly how it works clearly. | I did not contain lists that are sepertely included and I did not name the selected list. Also the code segment is clear and management of complexity is accurate. | . Row 4 Procedural Abstraction | I have a code segment that shows a procedure with at least one parameter that has an effect on the functionality of the procedure. I also have a code segment that shows where the student-developed procedure is being called. | I describe the identified procedure does and how it contributes to the overall functionality of the program. The parameter used in the procedure is explicit and is defined in the header of the procedure. | . Row 5 Algorithm Implementation | I include a program code segment of a student developed algorithm that includes: sequencing, selection, and iteration. I will also explain in detailed steps how the identified algorithm works in enough detail that someone elso could recreate it. | The algorithm being described can utilize existing language functionality or library calls. The algorithm contains selection and iteration as well as sequencing. | . Row 6 Testing | I describe two calls to the selected procedure identified in written response 3c. Each call passes a different argument that causes a different segment of code in the algorithm to execute. | I describe the condition being tested by each call to the procedure. I also identify the result of each call. Finally, I consider the implicit and explicit parameters used by the selected procedure which satisfys the CPT requirements. | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/09/CPT-guidelines.html",
            "relUrl": "/markdown/2023/02/09/CPT-guidelines.html",
            "date": " • Feb 9, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Big Idea 5.6 Safe Computing",
            "content": "Personal Identifiable Information (PII) . As we create a Web Site and post information we are adding to the Searchable PII. However, there is a dichotomy as a site like LinkedIn is a place where we want to be known for our accomplishments. But be aware, the person that looks at your LinkedIn will, most likely, look at things like TikTok, Instagram or Facebook. . PII Considerations . Things that will be known by everyone: Name, Email (suggest a junk email), Picture, High School attended, College Attended, Properties you own, State-City of residence, all State-City of previous residence, Credit Reports, … | Gray area items, more cautious: Birth date, Place of Birth, Street Address, Phone Number, Maiden names of Mother and Grandmother, Drivers License Number, … | Things that you should strive to keep absolutely secret: Credentials for Access, Two-Factor Authentication on Financial accounts, Social Security Number, Tax records, … | . Beware, Establish practices for your own Safety . Multi-factor authentication often requires you to enter a code that has been texted or emailed to you. Other types of authentication are biometrics (finger print or facial recognition). | Malware is often sent in attachments to things in email. Often they request you to click on an attachment and it starts the process of adding a virus to your computer. | Phishing is where unknown sources try to entice you into a response, like click here and receive $500. Often such systems impersonate someone like Amazon asking for login information. Be careful to look closely at source of email (ie amzn.com vs amazon.com). | . Factors to Increase Security of System . Most of my financials or critical systems use Multi Factor authentication | Biometrics is something that is used secure systems, fingerprints or facial recognition | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys – one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | SSL Uses both Asymmetric and Symmetric Encryption | . Nefarious Uses of Internet . A Virus or Malware compromise security, they are opposite of increasing security. | Phishing is a way to get a Virus on your machine, or a way to get you to input PII. | After a Virus or being compromised by Phishing it is advised to review all of you PII vulnerabilities. | . Blog Post Reflection . Describe PII you have seen on project in CompSci Principles. | What are your feelings about PII and your personal exposure? | Describe good and bad passwords? What is another step that is used to assist in authentication. | Try to describe Symmetric and Asymmetric encryption. | Provide an example of encryption we used in AWS deployment. | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. | Some PII in our own project consists of the Personal Identifiable Information inputted by the user, usually when they try to sign up on our login page. Hwere, they will input PII like their name, email, phone number. We then use this information to create connections between our users. | PII is good for websites to personalize and create a suitable enviroment but is dangerous because it can be used against the person. Someone can use public PII to find out about a person’s location and if they get access to other personal exposure, they can do much more dangerous things. | Good passwords have multiple characters, all of which are hard to guess and make sense to the user. They can consist of capital and undercase letters, number, signs, words, etc. Bad Passwords are easy to guess and thus easy to break in. Another step that assists in authentication is another detail, perhaps a username or a email account that adds an extra layer of security. | Symmetric encryption is encryption that makes sense to the user and the holder. It makes the password undecipherable to outside perspectives. Asymmetric encryption is encryption that neither outsiders nor users can understand. The only ones with access to these are the holders themselves. | An example of encryption used in AWS deployment was password encryption in the containers. Users could not access if weren’t in the same regional district. | One phishing technique is downloading from an untrustable website. When you download something and aren’t sure what it is, it can likely be a virus or other form of malware that can end up disrupting your device. | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/08/5.6-Safe-Computing.html",
            "relUrl": "/markdown/2023/02/08/5.6-Safe-Computing.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Big Idea 5.5 Legal and Ethical Concerns",
            "content": "Cost of Free . In Mr Mortensen’s most recent years in industry, there were many Lawyers making a profession on Patents and how they can be impacted on General Public Licensing (GPL). . | Qualcomm makes its money on patents, if you use GPL software you could be voiding your rights to charge for software and patents. Open Source by nature, specifically GPL, says any derivative work is free and code should be shared. Qualcomm wants all derivative work to require a royalty payment payment, also anyone who uses the idea/patent pays royalty. . | From synopsis.com, “Black Duck® software composition analysis (SCA) helps teams manage the security, quality, and license compliance risks that come from the use of open source and third-party code in applications and containers.” Qualcomm has had 20 technical jobs and 3 lawyers analyzing all the code produced, analyzing code for Open Source inclusion, and analyzing impact of such licenses to its ability to charge royalties for the use of their Patents. . | This may sound like a simple problem, but think about the Students of Today, often they are given an assignment and instead of developing their own algorithm they opt to copy something off the internet. Well, don’t think the Workers of Today are entirely different. In summary, it is important to know the type of software license you are copying, it could impact billions of dollars in business. . | . Icense Communities, License Types Guide . Adding and selecting a license GitHub instructions. An author, a licensor, needs to determine a license. This may result in asking… Do I want to waive default copyright in reuse? | Do I want to allow derivative works or not? | Do I want to require all derivative code to be shared? | . | . Creative Commons Zero v1.0 Universal . The Creative Commons CC0 Public Domain Dedication waives copyright interest in a work you’ve created and dedicates it to the world-wide public domain. . Open Source MIT License . This license in friendly to someone like Qualcomm! This allows using code freely and making and distributing closed source versions. Typically, the author of software with MIT License want credit. Credit could be as simple as adding the authors name in comments. . Close source means the GitHub project could be private. . Open SOurce GPL License . The GNU GPLv3 also lets people do almost anything they want with your project, except distributing closed source versions. . Open source means the GitHub project must be public. . For a company like Qualcomm, they are required to institute many practices to deliver their code in parts (public vs private). Isolating their patent and secret code, far away from the GPL or Creative Commons code. In fact, a company that is protecting their patents may need to division engineers, split distribution, not deploy to public, etc. After distribution, the customer of the Patented (ie Qualcomm) product is required to put the public/private domain code back together again. . Legal and Ethically . We need to comply with the terms of licenses. We need to cite sources. (I am particularly bad with internet pictures. However, in the picture of the Black Duck above I am actually advertising the Company). . As consumers, we have become aware that Music and Movie companies own content. These companies build DRM (Digital Rights Management) software to protect, play, and/or distribute content. Most of us buy subscriptions to services. However, some figure out ways to bypass systems and allow download. Often we will see these sites disappear, as they are illegal. . In software, it can be more complicated to understand all the Creative Commons licenses and its impact to our own ideas and businesses. Mostly, if we use things in class, there is “no problem” with Open Source as our usage is considered educational use. Creative Commons software has enabled amazing innovation as we are able to do so much for free, as we have done in this class. However, Individuals and Companies are required to figure out techniques and business models in order to use Open Source software according to terms of license. . Long ago, I remember being amazed that Red Hat was not selling its Linux distribution, they were giving away the software. They had to! This was in the terms of the licenses they were using, GPL. However, as an early pioneers in Linux distributions, they established a business model around buying their support agreement. They rose in fortune, became a public company, and had an amazing Initial Public Offering (IPO). Many, many vendors have followed the Red Hat model in building free distributions and establishing unique business models. Qualcomm figured out how to mix Patent and GPL businesses and have flourished since abandoning all proprietary, to include Android in its very complicated business model using Android. . Creative Commons, Open Source are free terminologies! However, businesses will not last without income. And today, businesses won’t last without engineers pulling Open Source software. . Blog Post Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. | One license type is The Creative Commons CC0 Public Domain Dedication which waives copyright interest in a work you’ve created and dedicates it to the world-wide public domain. In other words, this license allows you to work on and create off of preexisting data but you have to publish it aka make it public. | GPL is one example of licensing. They established a business model around buying their support agreement. They rose in fortune, became a public company, and had an amazing Initial Public Offering (IPO). Many, many vendors have followed the Red Hat model in building free distributions and establishing unique business models. Qualcomm figured out how to mix Patent and GPL businesses and have flourished since abandoning all proprietary, to include Android in its very complicated business model using Android. | We settled on the ___ license because … | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/08/5.5-Blog-Post.html",
            "relUrl": "/markdown/2023/02/08/5.5-Blog-Post.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Big Idea 5.4 Crowdsourcing",
            "content": "Crowdsourcing . The more you crowdsource, the more you reach beyond your own community, the more likely you will reduce Computer Bias. Crowdsourcing provides the ability to obtain shared information, share information, and participate in distributed computing. . Evidence of Crowdsourcing . Wikipedia has a ton of information from crowdsourcing, see Wikipedia definition on crowdsourcing. It can have inaccuracies, but when it does it often is corrected through a self-policing community. Reviews and many authors have made this, according to many, better than “official” information. | Crypto currency and associated block chain. All exchanges of money are validated at least 3-times by independent miners. If there is a flaw in the independent calculations the process is checked and performed again. Innovation of crypto crowdsourcing has impact on how governments think about currency. Additionally, block chain algorithms are being considered for many other crowdsourcing most private data (ie medical records). | COVID data, it is easy to recognize areas that are contributing and not contributing. This data has impacted all our lives and decision we make on attending public events, flying on planes, or wearing masks. The community of data and analysts will spawn many new ways of thinking about data that impacts lives. | . Obtaining Data Via Crowdsourcing . We have all experienced Crowdsourcing by using external data through API’s, namely RapidAPI. This data has influenced how we code and shown possibilities in obtaining and analyzing data. Discuss APIs you have used. | We have all participated in code Crowdsourcing by using GitHub. Many of you have forked from the Teacher repository, or exchanged code with fellow students. Not only can we analyze GitHub code, but we can obtain profiles and history about the persons coding history. What is the biggest discovery you have found in GitHub? The biggest discovery I have found on Github is the ability to add images and adjust them using html and css. I can also organize many other things such as tables or texts which allows for interesting designs. | . | Kaggle datasets for code and science exploration. The avenue of data points us youtube or netflix channels. Analyzing crowd data helps us make decisions. Exam top 10 to 20. Did you see anything interesting? The data sets are usually about a certain issue and present data useful in supporting a certain claim. For example, one such data set is Video game, Crime, Drop-out data set. This data set reveals correlations between videogames and crime which is not relevant for our project but can be used to prove a claim. | . | . Hacks . Think of a use case for crowdsourcing in you project … . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? We have all participated in code Crowdsourcing by using GitHub. Many of us have forked from the Teacher repository, or exchanged code with fellow students. Another way we can crowdsource is by having people outside of CSP review our website. This will allow fresh users to make comments that’ll likely avoid bias. | . | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? Del Norte crowdsourcing comes in many forms. AP Stat students may ask questions from different classes to gather data to their questions. ASB elects officials through a democratic vote which is another example of crowdsourcing. We can crowdsource in our own project by asking for user input. | . | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. One piece of data I could capture at N@tM is parent and student feedback. I’ll ask them “how can we improve our website?” Then, using the data I gather, I will implement them and show them to Mr. Mort potentially to show usage of crowdsourcing. | . | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/02/Big-Idea-Crowdsourcing.html",
            "relUrl": "/markdown/2023/02/02/Big-Idea-Crowdsourcing.html",
            "date": " • Feb 2, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Big Idea 5.3 Computing Bias",
            "content": "Computer Bias . Earlier we talked about beneficial and harmful effects of computing. Such conversation often lead to conversations on computer bias, particularly when bias creates a harmful effect. . As programmers, you now have the possibility of creating algorithms. It has been said, “Humans are error-prone and biased”. So, does that mean algorithms and the computers they run on are better? . Intentional or Purposeful bias (Crossover Group Up, 10 minutes) . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? | Is it harmful? Should it be corrected? Is it good business? | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) The age groups for Facebook and TikTok are likely very different. Facebook likely has a older age group of around 18 or older such as adults whereas TikTok will have a younger age group of around 18 or less. Each group targets a different select audience: Facebook targets adults/ young adults and TikTok targets children/teenagers. I wouldn’t say there is any purposeful exclusion because you can still find teenagers on Facebook and adults on TikTok. However, this exclusion may be harmful since it causes a platform divide between generations. Different age generations will like different things and cause a divide between people. It should be stopped but its good for businesses since it allows them to target certain audiences. | Virtual Assistants may use female voices because it is often viewed as more welcoming and helpful than a mans voice. This is likely purposeful because it might give the customer a better impression of their product. However, using female voices in assistant services is very problematic because it causes a bias around women and men. It generates a bias that women are generally assistants which is not tru. It also creates a bias that men can not speak interestingly. These are both bad biases that although may be helpful to businesses, are harmful to gender roles. | Amazon or Google might use algorithms that suggest products to you or sell your information to companies. However, some may view this as a breach of privacy. I, personally, don’t appreciate search engines selling my information. Similarly to before, Businesses benefit from this, selling and advertising things the user will want. Some may argue this algorithm is helpful because it suggests products that the user will want, personalizing a person’s advertisements. | . | . As Pairs (5 minutes) . Watch the video… HP computers are racist | Come up with some thoughts on the video and be ready to discuss them as I call on you. Here are some ideas… | Does the owner of the computer think this was intentional? If yes or no, justify you conclusion. | How do you think this happened? | Is this harmful? Was it intended to be harmful or exclude? | Should it be corrected? | What would you or should you do to produce a better outcome? | . | The owner of the video does not think this is intentional because it doesn’t looks like he’s mad and it looks like he’s joking. However, he does mention that HP computers are racist explicitly so it’s hard to tell. | I think this happened because the lighting makes the guy’s facial features dim down, harder to tell. Thus, it’s possible that the Hp computer didn’t pick up on the guys face and thus, wasn’t able to track it. | The HP computer is harmful because it doesn’t allow certain people to use their face tracking feature. However, it wasn’t intended to be harmful. HP is a large company and will likely get in a lot of trouble for purposeful exclusion. It was likely just a weak camera tracking system. | This camera feature should be tried to be fixed. Fixing the feature would allow all people to use it which is ideal. However, it should be noted that troubleshooting takes time. | I should be aware of computing bias and think about if there are any problems with my program that benefit us but harm the user like with the examples of Google and Amazon. I should also consider people’s backgrounds: age, ethnicity, religion, etc. and make sure no one is excluded from our features. | . Hacks . In this world, there are many baises in computer programs, companies, and apps. It is important to take note of these biases and try to void them as much as possible. One bias could be age and how different apps such as Facebook and TikTok have different targeted age groups. On is adult while the other targets teenagers. However, diversity in these types of apps is very important because it leads to less seperation. Another bias can be caused by race, ethnicity, etc. such as with the example of HP’s computer face tracking. In our own program regarding helping companies with shipment, one bias we may need to consider is small vs big businesses. We should help all businesses alike and thus we should be aware of possible biases in our features/ program. .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/02/01/Computing-Bias.html",
            "relUrl": "/markdown/2023/02/01/Computing-Bias.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Project Blog",
            "content": "Filters . Category Expectation Explanation/Response . Program Purpose and Function | Describes the purpose of the program, describes the program’s functionality, and can take an input and return an output. | The purpose of this program is to provide the user with a way to sort their shipments. Specifically, when a shipment is associated with a specific date, title, or importance. | . Data Abstraction | Shows how data has been stored in a collection and shows data from that collection as it contributes to the overall purpose of the program. Identifies the name of a variable representing the collection being used and describes what the data contained in the collection represents in the program. | Will store user data through shipment titles, dates, and specificity. For example, if user wants to remove a shipment, I may implement a trash option to delete it. | . Managing Complexity | Shows a collection of data that manages complexity. Explains an alternative method that would have been more complex and explains why that method could not be used or how it would have to be written differently. | This feature will manage complexity by allowing the user to sort by preferences, not just by name. | . Procedural Abstraction | Shows a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure, and shows where that procedure is called. Describes how the procedure contributes to the functionality of the program. | This will be clearly done simply just by coding out the necessary steps. Parameter will be included through the use of word limits. | . Algorithm Implementation | Includes a student-developed algorithm that includes sequencing, selection, and iteration. Explains how the algorithm works in detail enough to where someone could recreate it. | Listing inventory into a detailed table that stores the inventory’s information will have sufficient algorithms to fit this criteria. | . Testing | Describe two calls to the selected procedure in response 3c. Each call must pass a argument that causes different outputs. Describes conditions being tested by each call. Identifies the result of each call. | We will test two different features in each section, which test certain conditions and output different results. | . CPT . Each team member will be programming a special feature for the management system, so the individual create performance tasks will be focused on the respective features. For the n@tm project, we plan on intertwining each feature together to build one large application. . Code Pertaining to Guidelines . User should be able to input inventory to keep track of their detailed product in a table | They should be prompted with a button to click on | Once clicked, the button should navigate the user to the attributes of the inventory, including things such as the data of input, user name, name of item, and quantity. | User should then be able to click another button that adds all this into a neat table for the user to view and refer back to whenever needed | A “delete item” button will be implemented to allow the user to get rid of the item if needed, and an “edit item” will also be implemented so that the user can make changes on the go. | . Video Ideation . I plan to show my aspect of the feature by first, inputting an item into the table, with specified attributes. The next is editing the item once it has already been in display in the neat table, and finally, testing to see the functionality of each selected feature for sorting through the inputted data. .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/31/Project-Blog.html",
            "relUrl": "/markdown/2023/01/31/Project-Blog.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "College Board MCQ Reflection",
            "content": ". Overall, I got a 41/50 on the CB MCQ | This is equivalent to a 82% which is decent but not ideal. In order to improve this score, there are certain areas that I need to work on: | looking through the problems I missed, I noticed a lot of my missed questions were on 1.D which consisted of units from 3.6-3.11. Some of these units were: Nested Conditionals, Developing Algorithms, Algorithmic Efficiency, and Binary Search. | To improve in these areas, I will go back to my notes and review the content. I will also look at the College Board videos and use the examples from my videos to quiz myself. This will hopefully give me a better understanding of content that I’m unfamiliar of and aid me when I take the AP Exam. | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/31/College-Board-MCQ.html",
            "relUrl": "/markdown/2023/01/31/College-Board-MCQ.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Big Idea 5.1 and 5.2 Canvas Reflection",
            "content": "Blog Post Reflection . Questions . Think of three beneficial effects of your projects based on 5.1 Unit | Think of a potential harmful effect of your project. | Answer with an opinion and learnings so far this year: What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? | What concerns do you have personally about the digital divide? For yourself or for others. | . Reflection . One beneficial effect of our project is that it makes shipping easier because everything is stored and accounted for. Another beneficial effect is that interactions can be done through our project. Also, people can jot down their thoughts and communicate via our project. | A potentially harmful effect of our project is that it may be inconvenient for users if not enough people use our project. If most shipping transactions outside of our website, our users would need to view these actions elsewhere, making our project minimal if not used consistently. | Pros are that internet blockers prevent people from accessing inappropriate websites. Websites that aure untrustworthy, addicting, or distracting can all be restricted. However, the harmful effects of internet blockers is that students can’t access necessary tools that are helpful. For example, web restrictions prevent students from accessing AWS and forces them to use a vpn. | I’m concerned about the digital divide and how restrictions can prevent someone from learning. For students at this school, internet restrictions and lack of tools can be harmful and inconvenient. For less fortunate schools, I’m concerned that they have no tools at all, making them unable to learn or code. | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/25/Canvas-Blog-Reflection.html",
            "relUrl": "/markdown/2023/01/25/Canvas-Blog-Reflection.html",
            "date": " • Jan 25, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Presentation Notes",
            "content": "Project Idea: Club Execs 1st slide - Goals . Help Club Executives 2nd slide - Club List Database | Frontend details/ preview | Shows what has been done so far and what they plan to do in the fututre 3rd slide - club reviews | presents Features 4th slide - club documents | presents database | Also reveals how group is organized and meeting deadline requirements | Scrumboard and Spreadsheet | Manifesto | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/24/Purpose.html",
            "relUrl": "/markdown/2023/01/24/Purpose.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Big Idea 5.2 Digital Divide",
            "content": "Digital Divide is the difference in access to technology. Deals with “To Have and Have Not” in relation to computers, internet, or technology in general. . Some people may have no access to the internet or have worn down computers prevents students from being digitally equipped and being able to learn and perform | . | Comparatively, Del Norte High School has access to digital software and internet | Digital Divide between Del Norte and other schools | . Contributing factors to divide are socioeconomic, geographic, and demographic . In San Digeo, there is a regional divide marked by the interstate 8 | Some Religious groups like the amish choose not to use technology | . In education equity requires school to provide materials like computers and chromebooks. . However, there is still a digital divide in the way chromebooks a are hard for coding and have restrictions on them that prevent installation of coding platforms such as vscode | . Blog Post Reflection - Digital Empowerment . One can empower themselves in the digital world by using the resources they have to do the best in their field. A student may have a lack of resources but should still use free chromebooks, school internet, etc. to get their work done. Also, empowerment can be made if more,better resources can be provided. If everone had access to internet and functional computers, computation would be much more equal. | Someone that is empowered can help someone who is not empowered by sharing access to resources or donating unneeded materials. Someone who needs to create a physics project could greatly benefit from plastic, cardboard, scissors, tubes, etc. even if someone does not need them. | I believe red tape is the hindrance to digital empowerment because certain rules are unnecessary and prevent people from critically thinkng/ exploring. Website regulations, download regulations all affect a student’s learning. |",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/24/5.2-Digital-Divide.html",
            "relUrl": "/markdown/2023/01/24/5.2-Digital-Divide.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Big Idea 5.1 Beneficial and Harmful Effects",
            "content": "Main Idea . Every invention whether it’s in computer science or something else, has its benefits and its downsides/ disruptions . Ex: Chat GPT Chat GPT helps people create assignments just by running through it | redfines the necessity and purpose of search engines | However, it discourages critical thinking | Also, Chat GPT is full of bias because there is only one answer and other answers are not considered | . | . Dopamine and its Benefits and Negatives . Dopamine is another example of something that has borth positive and negative effects . Rosner was a professional gamer who was an example of this. He was celebrated as a World of Warcraft builder and he got lots of dopamine from his success. However, this dopamine was although exciting, it was also detrimental for Rosner. He reported that his grades started tanking and found other healthier activities such as going to the gym and watching films. | Thus, there were both benefits and harmful effects to Dopamine | . Phone Trees . Phone Trees are another example where despite a reduction in need for employees, the process of getting the customer to where they want was time consuming and inconvenient (harmful effect) . Blog Post Reflection . Most developers try to aim for positive effects. However, not every effect of a computing innovation is anticipated in advance. Some effects are harmful. For example, inventors of television, computers, mobile devices, and social media did not intend to unleash a slew of negative consequences for children. shortened attention spans | lack of connection to nature | cyber bullying and hate groups | spread of misingormation and fake news The intention was to produce a convenient and modern form of entertainment which in some ways, these fields achieve their goals. | . | Dopamine Issues are definetely real and I have experienced these issues myself. Sometimes, I can get caught up watching videos or scrolling through social media because of that instant dopamine effect which definetely prevented me from doing homework and affecting my academics. However, some forms of dopamine can definetely be beneficial.Finishing a project you worked long and hard on or helping others can serve as sources of dopamine that aren’t necessarily bad. |",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2023/01/24/5.1-Beneficial-and-Harmful-Effects.html",
            "relUrl": "/markdown/2023/01/24/5.1-Beneficial-and-Harmful-Effects.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$iHV...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$2I7...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "AP CSP Tri 2 Portfolio",
            "content": "3.1-3.2 Variables, Assignments, and Data Abstractions . Variable: an abstraction inside a program that can hold a value . Types of Variables | Integer: A number | Text/String: A word | Boolean: Data that determines if something is true or false | . # String name = &quot;table1&quot; print(name, type(name)) # Integer number = 4 print(number, type(number)) # Booleans isAbsent = False print(isAbsent, type(isAbsent)) . table1 &lt;class &#39;str&#39;&gt; 4 &lt;class &#39;int&#39;&gt; False &lt;class &#39;bool&#39;&gt; . Data Abstraction is a method used in coding to represent data in useful form, by taking away aspects of data that aren&#39;t being used in the situation . List = ordered sequence of elements | element = individsual value in a list that is assigned to a unique index | index = a way to reference the elements in a list or string using natural numbers; each element of a string is referenced by an index | string = ordered sequence of characters (Letters, numbers, special characters) | . def Reverse(lst): new_lst = lst[::-1] return new_lst lst = [&quot;pink&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;yellow&quot;, &quot;orange&quot;, &quot;blue&quot;, &quot;black&quot;] print(Reverse(lst)) . [&#39;black&#39;, &#39;blue&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;pink&#39;] . Managing Complexity is improving code readability and efficiency . Lists can be used to manage complexity | . colorList = [&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] print(str(colorList)) . [&#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;purple&#39;, &#39;blue&#39;, &#39;brown&#39;] . 3.3-3.4 Mathematical Expressions and Strings . An algorithm: a set of instructions that can accomplish a specific task . Sequencing: Algorithms do taks in the order of specification | Selection: Helps choose two different outcomes based off a decision | Iteration: If a conditions is true, then the code can repeat | def Reverse(lst): new_lst = lst[::-1] return new_lst lst = [&quot;pink&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;yellow&quot;, &quot;orange&quot;, &quot;blue&quot;, &quot;black&quot;] print(Reverse(lst)) . [&#39;black&#39;, &#39;blue&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;pink&#39;] . Flowcharts: The use shapes and arrows to represent the steps of an algorithm . . Basic Operations . Subtraction: . represented by &quot;-&quot; | . Addition: . represented by &quot;+&quot; | . Multiplication . represented by &quot;*&quot; | . Division . represented by &quot;/&quot; | . Getting the Remainder represented by &quot;MOD&quot; (% in python) . num1 = 10 num2 = num1 -25 num3 = 100*num1 num4 = num1/num2 num5 = 9 % num4 print(num5) . -0.3333333333333328 . Order of operations in programming are performed in the same order as operations in mathematics. . Strings . A string is a collection of characters. Can be numbers, letters, spaces, special symbols, etc. String concatenation is combining two or more strings to make a new strings in order to create a new string A substring is a part of and already existing string. . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len1 = str(len1) len2 = len(cookie2) * 45 len2 = str(len2) vote1 = cookie + &quot; vote: &quot; + len2 vote2 = cookie2 + &quot; vote: &quot; + len1 votes = vote1 + &quot; &quot; + vote2 print(votes) . choclate vote: 225 rasin vote: 4.0 . Unit 3 Section 5-7 . A boolean is a data type with two possible values: true or false Relational operators could use operators to determine if the average of 5 grades is greater than 80 . gradeList = [90, 65, 60, 75, 95] averageGrade = sum(gradeList)/len(gradeList) if averageGrade &gt; 80: print(&quot;the average grade is&quot; + averageGrade + &quot;%&quot;) else: print(&quot;The average grade is below 80%&quot;) . The average grade is below 80% . Logical Operators are similar to relational operators but these operators don&#39;t necessarily deal with equivalent/non-equivalent values, but they rather work on operands to produce a singular boolean result . AND: returns TRUE if the operand around it are TRUE | OR: returns TRUE if at least one operand is TRUE | NOT: returns TRUE if the following boolean is FALSE | . print(&quot;1 &gt; 2 or 5 &lt; 12:&quot;, 1&gt;2 or 5 &lt; 12) # NOT function print(&quot;24&gt;8:&quot;, not 24&gt;8) # AND function print(&quot;10&gt;20:&quot;, 10&gt;20 and 20&lt;10) . 1 &gt; 2 or 5 &lt; 12: True 24&gt;8: False 10&gt;20: False . Selection: uses a condition that evaluates to true or false Algorithm is a finite set of instructions that accomplish a specific task . x=20 y=10 if x&gt;y: print(&quot;x is greater than y&quot;) else: print(&quot;x is not greater than y&quot;) . x is greater than y . Nested Conditional statements consist of conditional statements within other conditional statements . utilizes if else statements within if else statements | basics of a nested conditional | . . 3.9-3.11 Algorithms and Binary Search . Lists . Lists: a sequence of variables . we can use lists to store multiple items into one variable | used to store collections of data | changeable, ordered, allow duplicates | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] print (fruits) . [&#39;apple&#39;, &#39;grape&#39;, &#39;strawberry&#39;] . brands = [&quot;nike&quot;, &quot;adidas&quot;, &quot;underarmour&quot;] numbers = [1, 2, 3, 4, 5] truefalse = [True, False, True] . Lists are just one of four collection data types in Python . Tuple: collection that is ordered, unchangeable, allows duplicates | Set: collection that is unordered, unchangeable, doesn&#39;t allow duplicates | Dictionary: collection that is ordered, changeable, doesn&#39;t allow duplicates | . Terms . Index: a term used to sort data in order to reference to an element in a list (allows for duplicates) | Elements: the values in the list assigned to an index | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] index = 1 print (fruits[index]) . grape . Methods in Lists . append() - adds elements to the end of the list insert() - adds element at given position reverse() - reverses the lsit order count() - returns the amount of elements with the specified value clear() - removes the elements from the list . Try this . Determine the output of the code segment words &lt;- &quot;old&quot;, &quot;car&quot;, &quot;unusual&quot;, &quot;new&quot;, &quot;bold&quot;, &quot;far&quot;, &quot;away&quot; index &lt;- 1 FOR EACH word IN words If LEN(word) = 3 REMOVE(words, index) . ELSE index &lt;- index + 1 . Display(words) This will output &quot;unusual&quot;, &quot;bold&quot;, &quot;away&quot; | . Iteration . Iteration allows you to go back in a certain value within a list . it is important for time and sanity | formally, Iteration is the repetition of a process or utterance applied to the result or taken from a previous statement. | . Iteration statements . Else: when the condition does not meet, do statement() | Elif: when the condition does not meet, but meets another condition, do statement() | Break: stop the loop | . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() output = &quot;&quot; for letter in inp: for word in words: if letter == word[0]: output += word + &quot; &quot; print(inp + &quot; n&quot; + output) . bruh bravo romeo uniform hotel . 3.9-3.11 . An algorithm is a process or set of rules to be followed through CODE. There are set limitations, this is what makes algorithms fun, you can use your own imagination and create whatever you want with your instructions. . temp = int(input(&quot;Select a temperature from 0 to 99 degrees F&quot;)) if (temp &gt;= 90): print(&quot;It&#39;s too hot outside!&quot;) else: if (temp &gt;= 65): print(&quot;Sure I will play outside!&quot;) else: print(&quot;It is too cold outside!&quot;) . It&#39;s too hot outside! . Conditions vs Booleans . The condition and instructions are what differ, that&#39;s where the magic happens. The condition is a boolean expression when an expression outputs either true or false. Boolean values are another type of data type in programming languages, and they can only ever hold true or false. . IsHoliday = False IsWeekday = True if IsHoliday: driveWork = True else: if IsWeekday: driveWork = True else: driveWork = False print(driveWork) . True . Flowchart: Flowcharts can help you visualize the functionality of a program . . Selection: A process used in algorithms where a conditional if-statements leads to one of two outcomes . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) if (varx %2 == 0): print(&quot;the number is even&quot;) else: print(&quot;the number is odd&quot;) . choose value for x the number is even . Iteration: . A process used in algorithms that allows certain things to happen until a condition is satisfied . - Once the condition is satisfied, then an outcome is produced - This can take the form of a for-loop, while-loop, and/or if-statement . | . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() output = &quot;&quot; for letter in inp: for word in words: if letter == word[0]: output += word + &quot; &quot; print(inp + &quot; n&quot; + output) . whatever whiskey hotel alfa tango echo victor echo romeo . What is Binary Search? . Binary search is a search algorithm that finds the position of a target value within a sorted array. Binary search compares the target value to the middle element of the array. | An algorithm for iterating to find a value inside a data set | . def BinarySearch(array, x, low, high): # Repeat until the pointers low and high meet each other while low &lt;= high: mid = low + (high - low)//2 # find the middle (taking the higest index number plus the lowest and divided by two) if array[mid] == x: # if desired number is the middle is found return desired number (middle number) return mid elif array[mid] &lt; x: low = mid + 1 else: high = mid - 1 return -1 array = [3, 4, 5, 6, 7, 8, 9] x = 4 result = BinarySearch(array, x, 0, len(array)-1) if result != -1: print(&quot;Element is present at index &quot; + str(result)) else: print(&quot;Not found&quot;) . Element is present at index 1 . 3.12-3.13 . A procedure is a named group of programming instructions that may have parameters and return values. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) if (varx %2 == 0): print(&quot;the number is even&quot;) else: print(&quot;the number is odd&quot;) . choose value for x the number is even . One type of abstraction is procedural abstraction which provides a name for a process and allows a procedure to be used only knowing what it does and not how it does it manages complexity in a program | . | Simply, procedural abstraction is naming and calling a prewritten procedure | . def letterGradeCalculator(percent): if (percent &lt; 60): return &quot;F&quot; elif (percent &gt;= 60) and (percent &lt; 70): return &quot;D&quot; elif (percent &gt;= 70) and (percent &lt; 80): return &quot;C&quot; elif (percent &gt;= 80) and (percent &lt; 90): return &quot;B&quot; elif (percent &gt;= 90) and (percent &lt; 100): return &quot;A&quot; else: return &quot;A+&quot; percent = int(input(&quot;What is your percent grade?&quot;)) print(percent) print(letterGradeCalculator(percent)) . 92 A . Subdivision of a program into separate subprograms is called modularity | . Code Segment 1 Code Segment 2 . ROTATE_LEFT() | detourLeft() | . MOVE_FORWARD()|turnCorner()| ROTATE_RIGHT |MOVE_FORWARD()| MOVE_FORWARD()|MOVE_FORWARD()| MOVE_FORWARD() ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() MOVE_FORWARD MOVE_FORWARD() . 3.14-3.15 Libraries and Random Values . A library is a collection of precompiled codes that can be used later on in a program for some specific well-defined operations. | These precompiled codes can be referred to as modules. Each module contains bundles of code that can be used repeatedly in different programs. | A library may also contain documentation, configuration data, message templates, classes, and values, etc. | . import numpy as np new_matrix = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) print (new_matrix) . [[1 2 3] [4 5 6] [7 8 9]] . Pillow allows you to work with images. | Tensor Flow helps with data automation and monitors performance. | Matplotlib allows you to make 2D graphs and plots. | . . An Application Program Interface, or API, contains specific direction for how the procedures in a library behave and can be used. | An API acts as a gateway for the imported procedures from a library to interact with the rest of your code. | . . Random number generation (RNG) produces a random number (crazy right?) This means that a procedure with RNG can return different values even if the parameters (inputs) do not change | . | . import random n = 1 sum = 0 while n &gt; 0: sum = sum + random.randint(1 , 6) n = n - 1 break n = 0 print(sum) . 6 . 3.17-3.18 Undecidable Problems . Algorithmic Efficiency - the ability of an algorithm to solve a problem in an efficient way . Decision Problem - a problem in computer science and mathematics that can be solved by a yes-no answer, also known as a binary answer. . Decidable Problem - a problem in computer science and mathematics for which an algorithm can be created that can always produce a correct answer or solution. . Undecidable Problem - a problem in computer science and mathematics for which it is impossible to create an algorithm that can always provide a correct answer or solution. . def divideThirteen(number): if number % 13 == 0: return True else: return False print(divideThirteen(26)) print(divideThirteen(30)) . True False . i = 0 number = 1 def integerTest(n): # Testing if the number is an integer if n%1 ==0: return True else: return False # Using while loop to keep searching an a non-integer above 1. Note that the computer runs forever. while i == 0: number += 1 if integerTest(number) == False: i +=1 print(&quot;Done&quot;) .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/jupyter/libraries",
            "relUrl": "/jupyter/libraries",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 3 Sections 17-18",
            "content": "3.17: Algorithm Efficiency . Purpose: . The purpose of this lesson is to help students understand how to make an efficient program and optimize it and understand its importance to the CSP curriculum. . What is Algorithmic Efficiency? . The ability of an algorithm to solve a problem in an efficient way An efficient algorithm solves a problem quickly and with a minimum amount of resources, such as time and memory. | . | How do we determine if an algorithm is efficient or not? One way we can do this is by determining the time complexity of the algorithm. | Another way is through space complexity. | . | . Traveling Merchant Problem Hacks: . What did you and your team discuss? (record below) . An heuristic solution is an approach to a problem that produces a solution that isn&#39;t necessarily optimal but can be used when normal methods take forever | . Describe the method used to solve the traveling merchant problem. (record below) . 3.18: Undecidable Problems . Purpose: . The purpose of this lesson is to introduce students to the concept of undecidable problems in computer science and to explain why these problems are important. . Key vocabulary: . Decision problem | Decidable problem | Undecidable problem | . Decision Problem . A decision problem is a problem in computer science and mathematics that can be solved by a yes-no answer, also known as a binary answer. In other words, a decision problem is a problem for which there are only two possible outputs:&quot;yes&quot; or &quot;no&quot;. There are two types of decision problems that Collegeboard goes over: . Decidable Problems | Undecidable Problems | . A decidable problem is a problem in computer science and mathematics for which an algorithm can be created that can always produce a correct answer or solution. In other words, a decidable problem is a problem for which there exists an algorithm that can be used to determine whether a given input is a valid solution or not. . An undecidable problem problem is a problem in computer science and mathematics for which it is impossible to create an algorithm that can always provide a correct answer or solution. This means that it is not possible for an algorithm to always determine whether a given input is a valid solution to an undecidable problem. . Decidable Problems . A decidable problem is an algorithm that can always have an output of yes or no given any input. It is always correct. . Example of a Decidable Problem . The procedure below tests to see if a number is divisible by 13. If it is, it returns true. If it isn&#39;t, it returns false. . def divideThirteen(number): if number % 13 == 0: return True else: return False print(divideThirteen(26)) print(divideThirteen(30)) . True False . Undecidable Problems . An Example of a Forever Running Code . The code keeps adding 1 to the variable number until number is no longer an integer(This is not the python data type &quot;integer&quot;, it&#39;s the integer in number theory). However, there is no end to this code, making the computer run forever. There is no halt to the code. . i = 0 number = 1 def integerTest(n): # Testing if the number is an integer if n%1 ==0: return True else: return False # Using while loop to keep searching an a non-integer above 1. Note that the computer runs forever. while i == 0: number += 1 if integerTest(number) == False: i +=1 print(&quot;Done&quot;) . KeyboardInterrupt Traceback (most recent call last) Cell In[1], line 12 10 while i == 0: 11 number += 1 &gt; 12 if integerTest(number) == False: 13 i +=1 14 print(&#34;Done&#34;) Cell In[1], line 5, in integerTest(n) 3 def integerTest(n): 4 # Testing if the number is an integer -&gt; 5 if n%1 ==0: 6 return True 7 else: KeyboardInterrupt: . The Halting Problem . The halting problem is an example of an undecidable problem. It states that it is not always possible to correctly determine whether a code halts or runs forever. . There is no way to write an algorithm to analyze and determine whether a body of code can run forever or not. . Halting Problem Example: . In order to understand this, suppose that an algorithm was able to analyze whether a code halts or not. Let&#39;s call this algorithm HaltChecker. | HaltChecker analyzes the program,program P, and its input,input I. If program P halts with input I, HaltChecker returns an output of &quot;halts&quot;. If program P doesn&#39;t halt(runs forever) with input I, HaltChecker returns an output of &quot;never&quot;. For example, in the code where it tests if variable number, the code runs forever, so HaltChecker returns an output of &quot;never&quot;. | Then, we add another algorithm called Reverser which reverses HaltChecker&#39;s output. So, if &quot;never&quot; is the output of HaltChecker, then the output of Reverser is &quot;halts&quot;. It&#39;s also the same the other way around: if HaltChecker has an output of &quot;halts&quot;, then Reverser has an output of &quot;never&quot;. | We combine these algorithms into one entire body of code. | Since Reverser is the algorithm at the end, hence giving the ultimate output, notice how it prints &quot;never&quot; when in fact there is an end(As proved by HaltChecker), and how it also prints &quot;halts&quot; when there is in fact is no end to the code(Also proved by HaltChecker). As a result, HaltChecker is inaccurate and this is an undecidable problem. | . This Diagram Sums up the Entire Process in the Bulleted List: . Credits of diagram and example to Khan Academy . FAQ . Q: If Reverser is causing the problem, why not remove it? | A: Removing Reverser will remove the problems, however, we are looking for ways which create the problem of not outputting a correct result. One example is enough to prove that it is an undecidable problem since it proves that the code is not completely accurate. | . Extra Things to Notice . Note that while a computer may take a long time to run a section of code, it does not mean that the computer is going to run forever. | Humans are able to solve some undecidable problems. The entire Halting Problem example was to prove that computers cannot solve undecidable problems. | . Hacks . Come up with one situation in which a computer runs into an undecidable problem. Explain why it is considered an undecidable problem. . 3.17 Homework . Your homework for Algorithmic Efficiency is pretty simple. . Use the 1st code below and graph it (Desmos, TI Inpire Cas, e.t.c), change the x value only! | Label the number of loops done as x and the time (microseconds) to find the index as y | Connect the points | Do the same thing with the 2nd code | Compare the two graphs and explain which one of the two is more efficient and why (min. 2 sentences) | Insert images of the graph either in your blog or on review ticket | import time def linear_search(lst, x): start_time = time.perf_counter_ns() # records time (nanoseconds) for i in range(len(lst)): # loops through the entire list if lst[i] == x: # until the x value we are looking for is found end_time = time.perf_counter_ns() # records time again total_time = (end_time - start_time) // 1000 # subtracts last recorded time and first recorded time print(&quot;Found element after {} loops in {} microseconds&quot;.format(i+1, total_time)) # prints the results return print(&quot;Your number was found at&quot;, i) end_time = time.perf_counter_ns() # records the time again total_time = (end_time - start_time) // 1000 # subtracts last recorded time and first recorded time print(&quot;Element not found after {} loops in {} microseconds&quot;.format(len(lst), total_time)) # prints the results return &quot;Your number wasn&#39;t found :(&quot; lst = list(range(1, 10001)) # list with numbers 1-10000 x = 5000 # replace with an integer between 1 and 10000 (I suggest big numbers like 500, 2000, so on) linear_search(lst, x) # runs procedure . import time def binary_search(lt, x): start_time = time.perf_counter_ns() # starts timer low = 0 # sets the lower side mid = 0 # sets mid value high = len(lt) -1 # sets the higher side num_loops = 0 # number of loops the search undergoes to find the x value while low&lt;=high: # Loop ran until mid is reached num_loops += 1 # adds one loop each time process is repeated mid = (low + high) // 2 # takes the lowest and highest possible numbers and divides by 2 and rounds to closest whole # if lt[mid] == x: end_time = time.perf_counter_ns() # records time total_time = (end_time - start_time) // 1000 # time in microseconds print(&quot;Element found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return mid # returns the index value elif lt[mid] &gt; x: # if mid was higher than x value, then sets new highest value as mid -1 high = mid -1 elif lt[mid] &lt; x: low = mid + 1 # if mid was lower than x, sets the new low as mid + 1 end_time = time.perf_counter_ns() total_time = (end_time - start_time) // 1000 print(&quot;Element not found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return &quot;Your number wasn&#39;t found :(&quot; lt = list(range(1, 10001)) # list with numbers 1-10000 x = 149 # replace with an integer between 1 and 10000 (I suggest big numbers like 500, 2000, so on) binary_search(lt, x) # runs procedure . 3.18 Homework: . Use the Jupyter notebook to write an algorithm that solves a decidable problem. You can use math or whatever else you would like to do. | Write code to get the computer to run forever. Check this example if you need help, but please come up with your own idea. | Homeworks, hacks, and classwork(filled in blanks) for both 3.17 and 3.18 are due on Thursday at 9:00 pm. -0.1 points for each day late. .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/lesson",
            "relUrl": "/lesson",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Unit 3 Sections 14 and 15",
            "content": "Libraries . A library is a collection of precompiled codes that can be used later on in a program for some specific well-defined operations. | These precompiled codes can be referred to as modules. Each module contains bundles of code that can be used repeatedly in different programs. | A library may also contain documentation, configuration data, message templates, classes, and values, etc. | . Why are libraries important? . Using Libraries makes Python Programming simpler and convenient for the programmer. | One example would be through looping and iteration, as we don’t need to write the same code again and again for different programs. | Python libraries play a very vital role in fields of Machine Learning, Data Science, Data Visualization, etc. | . A few libraries that simplify coding processes: . Pillow allows you to work with images. | Tensor Flow helps with data automation and monitors performance. | Matplotlib allows you to make 2D graphs and plots. | . The AP Exam Refrence Sheet itself is a library! . Hacks: . Research two other Python Libraries NOT DISCUSSED DURING LESSON and make a markdown post, explaining their function and how it helps programmers code. . API&#8217;s . An Application Program Interface, or API, contains specific direction for how the procedures in a library behave and can be used. | An API acts as a gateway for the imported procedures from a library to interact with the rest of your code. | . Activity: Walkthrough with NumPy . Install NumPy on VSCode: Open New Terminal In VSCode: | pip3 install --upgrade pip | pip install numpy | | . REMEMBER: When running library code cells use Python Interpreter Conda (Version 3.9.12) . Example of using NumPy for arrays: . import numpy as np new_matrix = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) print (new_matrix) . [[1 2 3] [4 5 6] [7 8 9]] . Example of using NumPy for derivatives: . import numpy as np # defining polynomial function var = np.poly1d([2, 0, 1]) print(&quot;Polynomial function, f(x): n&quot;, var) # calculating the derivative derivative = var.deriv() print(&quot;Derivative, f(x)&#39;=&quot;, derivative) # calculates the derivative of after # given value of x print(&quot;When x=5 f(x)&#39;=&quot;, derivative(5)) . Polynomial function, f(x): 2 2 x + 1 Derivative, f(x)&#39;= 4 x When x=5 f(x)&#39;= 20 . Random Values . Random number generation (RNG) produces a random number (crazy right?) This means that a procedure with RNG can return different values even if the parameters (inputs) do not change | . | CollegeBoard uses RANDOM(A, B), to return an integer between integers A and B. RANDOM(1, 10) can output 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10 | In Python, this would be random.randint(A, B), after importing Python&#39;s &quot;random&quot; library (import random) | JavaScript&#39;s works a little differently, with Math.random() returning a value between 0 and 1. To match Python and CollegeBoard, you could make a procedure like this | . | . | . CollegeBoard Example: What is the possible range of values for answ3 . Convert the following procedure to Python, then determine the range of outputs if n = 5. . PROCEDURE Dice(n) sum ← 0 REPEAT UNTIL n = 0 sum ← sum + RANDOM(1, 6) n ← n - 1 RETURN sum . import random # Fill in the blank n = 1 sum = 0 while n &gt; 0: sum = sum + random.randint(1 , 6) n = n - 1 break n = 0 # Code here print(sum) # Will output a range of __ to __ . 3 . Homework . Write a procedure that generates n random numbers, then sorts those numbers into lists of even and odd numbers (JS or Python, Python will be easier). . | Using NumPy and only coding in python cell, find the answer to the following questions: a. What is the derivative of 2x^5 - 6x^2 + 24x? b. What is the derivative of (13x^4 + 4x^2) / 2 when x = 9? . | Suppose you have a group of 10 dogs and 10 cats, and you want to create a random order for them. Show how random number generation could be used to create this random order. . | import random def numsorter(n = int): numbers = [random.randint(0, 100) for i in range(n)] EvenNumbers = [num for num in numbers if num % 2 == 0] OddNumbers = [num for num in numbers if num % 2 &gt; 0] print(OddNumbers) print(EvenNumbers) n = int(input(&quot;Enter any number (1-100)&quot;)) numsorter(n) . [99, 19, 57, 29, 77, 43, 65, 35, 27, 31, 15, 69, 87, 1, 77, 91, 77, 3] [8, 28, 0, 98, 60, 62, 96, 92, 60, 52, 86, 40, 8, 14, 66, 70, 18, 90, 52, 90, 96, 74, 50, 72, 54, 34, 0, 32, 58, 88, 82, 40] .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/jupyter/libraries",
            "relUrl": "/jupyter/libraries",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Links to Lessons",
            "content": "Unit Link . 3.1-3.2 Variables and Assignment | https://dillonlee06.github.io/ZestyYeungsReborn/jupyter/week%2013/2022/11/27/Variable-Assignment.html | . 3.3-3.4 Mathematical Expressions and Strings | https://manigggg18.github.io/manimani/jupyter/lesson2 | . 3.5-3.7 Boolean Expression and Conditionals | https://jasoxddd.github.io/booleanConditionals/2022/12/14/boolean.html | . 3.8-3.10 Boolean Iteration and Lists | https://teamorborb.github.io/TeamOrbOrb/lesson%20plans/2022/11/28/Unit_3.8_3.10.html | . 3.9-3.11 Developing Algorithms and Binary Search | https://gwang1224.github.io/repository_1/trimester%202%20student%20teaching/2022/12/02/unit3-9-11.html | . 3.12-3.13 Calling and Developing Procedures | https://docs.google.com/presentation/d/1stQzqXT_n2BdQsnACnW3t4ZYaIePEVOL6Rs6aomxDKI/edit | . 3.14-3.15 Libraries and Random Values | https://saavangade.github.io/Saavan/ap%20csp/unit%203/section%2014/section%2015/lesson/2022/12/11/Lesson-Unit-3-Section-14-15.html | . 3.16 Simulations | https://t-dev-ccm.github.io/Fastpage-setup/lesson/2022/12/12/Simulations.html | . 3.17-3.18 Algorithm Efficiency and Undecidable Problems | https://mmaxwu.github.io/Tri2-GroupFastpages/lesson | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/lessons/2022/12/09/Odin-Homework.html",
            "relUrl": "/lessons/2022/12/09/Odin-Homework.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Title",
            "content": "print(&quot;what did you get out of 40?&quot;) currentPoints = int(input()) currentGrade = currentPoints / 40 currentPercent = currentGrade * 100 print(&quot;Percent score:&quot;) print(currentPercent) . what did you get out of 40? Percent score 95.0 . print(&quot;what did you get out of 50?&quot;) currentPoints = int(input()) currentGrade = currentPoints / 50 currentPercent = currentGrade * 100 print(&quot;Percent score:&quot;) print(currentPercent) . what did you get out of 50? Percent score: 98.0 .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/12/08/Procedures.html",
            "relUrl": "/2022/12/08/Procedures.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 3 Sections 12-13",
            "content": "Calling Procedures . Slide 1: . A procedure is a named group of programming instructions that may have parameters and return values. | Procedures are referred to by different names, such as method or function, depending on the programing language. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | A procedure call interrupts the sequential execution of statements causing the program to execute the statements within the procedure before continuing. One the last statement in the procedure (or a return statement) has executed, flow or control is returned to the point immediately following where the procedure was called. | . Slide 2: . When calling procedures, it&#39;s important to take notice to whether it returns data, or a block of statements. | If the procedure just returns a block of statements, you call the procedure by referring to the procedure name, and inputting the arguments. | If the procedure returns some sort of data like a boolean or value, then you will assign that value to a variable | . Slide 3: . Assume the Temperature outside is Fahrenheit. | The procedure convertFahrenheit is intended to convert from Fahrenheit to Celsius. | Convert the following psuedocode to python | . def convertFahrenheit(): # code goes here return celsius convertFahrenheit(outsideTemp) . NameError Traceback (most recent call last) Cell In[1], line 5 1 def convertFahrenheit(): 2 # code goes here 3 return celsius -&gt; 5 convertFahrenheit(outsideTemp) NameError: name &#39;outsideTemp&#39; is not defined . Developing Procedures . Slide 8: . Picking a descriptive name is important in case you revisit the code later on (separate words with capitals) There are 2 different types of procedures- ones that return a value and those that simply execute a block of statements Steps of developing procedure: picking a useful name, thinking of parameters (what data does the procedure need to know), making a flowchart or writing procedure in pseudocode, and actually developing the procedure. . Slide 9: . In this example, a teacher is writing a program that will replace the grade on a previous quiz if the new grade is better than the previous. . What would be a good name for this procedure? | What parameters do we need for this procedure? | Try writing this procedure out in python based on the given pseudocode | . currentGrade &lt;- currentPoints / 40 currentGrade &lt;- current Grade * 100 if currentGrade &gt; quizGrade quizGrade &lt;- currentGrade . Procedural Abstraction . One type of abstraction is procedural abstraction which provides a name for a process and allows a procedure to be used only knowing what it does and not how it does it | This is very helpful in managing complexity in a program | Subdivision of a program into separate subprograms is called modularity | A procedural abstraction may extract shared features to generalize functionality instead of duplicating code. This allows for program reuse, which helps manage complexity | When a pre-written procedure is called, you don’t necessarily need to know the details of this, just what it does and how to call it | Simply, procedural abstraction is naming and calling a prewritten procedure | Making sure to include the right arguments so the procedure can do what its supposed to do is crucial | . Complexity Example . One of the biggest advantages of procedural abstraction is managing complexity. . Think about the process of simplifying the code? What do you think the advantage of the code segment on the left is? . Code Segment 1 Code Segment 2 . ROTATE_LEFT() | detourLeft() | . MOVE_FORWARD()|turnCorner()| ROTATE_RIGHT |MOVE_FORWARD()| MOVE_FORWARD()|MOVE_FORWARD()| MOVE_FORWARD() ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() MOVE_FORWARD MOVE_FORWARD() . Hacks . Write a python procedure about something which can help you in school, for example the teacher’s function we spoke about earlier. | Points will be awarded based on creativity and functionality | 0.1 points will be deducted for late submissions | Submit the notes with all blanks filled in (scored out of 0.5 points) and the python procedure (scored out of 0.5 points) by Monday 12/12 at 11:59 PM. | . def letterGradeCalculator(percent): if (percent &lt; 60): return &quot;F&quot; elif (percent &gt;= 60) and (percent &lt; 70): return &quot;D&quot; elif (percent &gt;= 70) and (percent &lt; 80): return &quot;C&quot; elif (percent &gt;= 80) and (percent &lt; 90): return &quot;B&quot; elif (percent &gt;= 90) and (percent &lt; 100): return &quot;A&quot; else: return &quot;A+&quot; percent = int(input(&quot;What is your percent grade?&quot;)) print(percent) print(letterGradeCalculator(percent)) . 85 B .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/lessons/2022/12/07/developing-procedures.html",
            "relUrl": "/lessons/2022/12/07/developing-procedures.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Title",
            "content": "temp = int(input(&quot;Select a temperature from 0 to 99 degrees F&quot;)) if (temp &gt;= 90): print(&quot;It&#39;s too hot outside!&quot;) else: if (temp &gt;= 65): print(&quot;Sure I will play outside!&quot;) else: print(&quot;It is too cold outside!&quot;) . It is too cold outside! . temp = int(input(&quot;Select a temperature from 0 to 99 degrees F&quot;)) if (temp &gt;= 90): print(&quot;It&#39;s too hot outside!&quot;) if (temp &gt;= 65): print(&quot;Sure I will play outside!&quot;) if (temp &lt; 65): print(&quot;It is too cold outside!&quot;) . It&#39;s too hot outside! Sure I will play outside! . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) print(varx) while varx != 1: if (varx %2 == 0): varx = varx/2 print(varx) # add Display else: varx = varx * 3 + 1 print(varx) # add Display print(varx) . choose value for x 18 9.0 28.0 14.0 7.0 22.0 11.0 34.0 17.0 52.0 26.0 13.0 40.0 20.0 10.0 5.0 16.0 8.0 4.0 2.0 1.0 1.0 . def BinarySearch(array, x, low, high): # Repeat until the pointers low and high meet each other while low &lt;= high: mid = low + (high - low)//2 # find the middle (taking the higest index number plus the lowest and divided by two) if array[mid] == x: # if desired number is the middle is found return desired number (middle number) return mid elif array[mid] &lt; x: low = mid + 1 else: high = mid - 1 return -1 array = [3, 4, 5, 6, 7, 8, 9] x = 4 result = BinarySearch(array, x, 0, len(array)-1) if result != -1: print(&quot;Element is present at index &quot; + str(result)) else: print(&quot;Not found&quot;) . Element is present at index 1 .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/12/07/Hacks.html",
            "relUrl": "/2022/12/07/Hacks.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Lists and Iterations",
            "content": "Lists and Iterations . Lists . What are lists? . Lists: a sequence of variables . we can use lists to store multiple items into one variable | used to store collections of data | changeable, ordered, allow duplicates | . List examples in Python, JavaScript, and Pseudocode . fruits = [“apple”, “grape”, “strawberry”] print (fruits) . const fruits = [“apple”, “grape”, “strawberry”]; . fruits &lt;- [apple, grape, strawberry] . More List examples . brands = [“nike”, “adidas”, “underarmour”] numbers = [1, 2, 3, 4, 5] truefalse = [True, False, true] . Lists are just one of four collection data types in Python . Tuple: collection that is ordered, unchangeable, allows duplicates | Set: collection that is unordered, unchangeable, doesn’t allow duplicates | Dictionary: collection that is ordered, changeable, doesn’t allow duplicates | . Terms . Index: a term used to sort data in order to reference to an element in a list (allows for duplicates) | Elements: the values in the list assigned to an index | . fruits = [“apple”, “grape”, “strawberry”] index = 1 . print (fruits[index]) . Methods in Lists . append() - adds elements to the end of the list insert() - adds element at given position reverse() - reverses the lsit order count() - returns the amount of elements with the specified value clear() - removes the elements from the list . Try this . Determine the output of the code segment words &lt;- “old”, “car”, “unusual”, “new”, “bold”, “far”, “away” index &lt;- 1 FOR EACH word IN words If LEN(word) = 3 REMOVE(words, index) ELSE index &lt;- index + 1 Display(words) This will output “unusual”, “bold”, “away” | . Iteration . First, what not to do . Iteration is important for your time and sanity Coding a lot of blocks indivisually takes a lot of unnecessary time, how can we shorten this time? . Iteration Iteration is the repetition of a process or utterance applied to the result or taken from a previous statement. There’s a lot of types of iteration though, what to use? How do we apply iteration to lists? . Some methods include using a “for loop”, using a “for loop and range()”, using a “while loop”, and using comprehension . Lists, tuples, dictionaries, and sets are iterable objects. They are the ‘containers’ that store the data to iterate . Each of these containers are able to iterate with the iter() command. . There are 2 types of iteration: define and indefinite. Define iteration clarifies how many times the loop is going to run, while indefinite specifies a condition that must be met . for variable in iterable: statement() . Iterator? Iterable? Iteration? .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2022/12/06/Lists-and-Iterations-Notes.html",
            "relUrl": "/markdown/2022/12/06/Lists-and-Iterations-Notes.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Title",
            "content": "words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() output = &quot;&quot; for letter in inp: for word in words: if letter == word[0]: output += word + &quot; &quot; print(inp + &quot; n&quot; + output) . whatever whiskey hotel alfa tango echo victor echo romeo . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] def print_matrix3(matrix): for i in matrix: print(*i) print_matrix3(keypad) . 1 2 3 4 5 6 7 8 9 0 . keyboard = [[&quot;`&quot;, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;]] # Birth Month print(str(keyboard[3][5]) + str(keyboard[1][8]) + str(keyboard[3][3]) + str(keyboard[1][2]) + str(keyboard[3][6]) + str(keyboard[3][4]) + str(keyboard[1][2]) + str(keyboard[1][3])) # Age print(str(keyboard[0][1]) + str(keyboard[0][6])) . NOVEMBER 16 .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/12/06/Lists-and-Iterations-Hacks-Homework.html",
            "relUrl": "/2022/12/06/Lists-and-Iterations-Hacks-Homework.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Title",
            "content": "def method2(): truth_table = [[1,1], [1,0], [0,1], [0,0]] for a, b in truth_table: print(f&quot;and {a} &amp; {b}: {a &amp; b}&quot;) for a, b in truth_table: print(f&quot;nand ~({a} &amp; {b}): {((a &amp; b) + 1) % 2}&quot;) # warning: ~ negates entire integer without modulo for a, b in truth_table: print(f&quot;or {a} | {b}: {a | b}&quot;) for a, b in truth_table: print(f&quot;nor ~({a} | {b}): {((a | b) + 1) % 2}&quot;) # warning: see above for a, b in truth_table: print(f&quot;xor {a} ^ {b}: {a ^ b}&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 2 *****&quot;) method2() . ***** Method 2 ***** and 1 &amp; 1: 1 and 1 &amp; 0: 0 and 0 &amp; 1: 0 and 0 &amp; 0: 0 nand ~(1 &amp; 1): 0 nand ~(1 &amp; 0): 1 nand ~(0 &amp; 1): 1 nand ~(0 &amp; 0): 1 or 1 | 1: 1 or 1 | 0: 1 or 0 | 1: 1 or 0 | 0: 0 nor ~(1 | 1): 0 nor ~(1 | 0): 0 nor ~(0 | 1): 0 nor ~(0 | 0): 1 xor 1 ^ 1: 0 xor 1 ^ 0: 1 xor 0 ^ 1: 1 xor 0 ^ 0: 0 .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/12/02/JS-Truth-Table.html",
            "relUrl": "/2022/12/02/JS-Truth-Table.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Booleans and Conditionals",
            "content": "3.5 - Boolean Expressions . Here we will focus on: . basics of Booleans | its relationship with binary | relational operators | logical operators | . What is a boolean? . A data type with two possible values: true or fals . Boolean and Binary . So similar yet so different . Boolean math and binary notation both use the same two ciphers: 1 and 0. | However, please note that Boolean quantities are restricted to a singular bit | on the otherhand, binary numbers may be composed of many bits adding up in place-weighted form to any finite value, or size | . Must Knows . A boolean value is either true or false | The AP Exam will provide you with a reference sheet with the operators below. a = b a =/ b a &gt; b a &lt; b a &gt;= b a &lt;= b . | A few ways these operators could be used | equal, not equal, greater than, less than, greater than or equal to, less than or equal to (respectively) | . Logical Operators . These types of operators don’t necessarily deal with equivalent/non-equivalent values, but they rather work on operands to produce a singular bollean result . AND: returns TRUE if the operand around it are TRUE | OR: returns TRUE if at least one operand is TRUE | NOT: returns TRUE if the following boolean is FALSE | . Lesson 3.6 - Conditionals . Focusing on a Selection . Selection: uses a condition that evaluates to true or false Selection determines which part of an algorithm are executed based on a condition being true or false Algorithm is a finite set of instructions that accomplish a specific task . Conditional Statements . Also known as “if statements” can be seen as if statements or if blocks Ex: if (condition) [Block of Statements] can be seen as if else of if else-blocks Ex: if (condition) [Block of Statements] . x=20 y=10 if x &gt; y: print(“x is greater than y”) . x=20 y=10 if x&gt;y: print(“x is greater than y”) else: print(“x is not greater than y”) . Lesson 3.7 - nested Conditionals . Nested conditionals statements consist of conditional statements within other conditional statements | Utilizes “if else” statements within “if else” satements | basics of a nested conditional | . Analyzing Code Walkthrough . Pseuocode to the left, block code to the right | Approach the problem by going through each condition one at a time | decide which ones are false to skip and which ones are tru to execute | .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2022/12/02/Boolens-and-Conditionals.html",
            "relUrl": "/markdown/2022/12/02/Boolens-and-Conditionals.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Title",
            "content": "ProductCost = input(&quot;What is the cost of the product?&quot;) print(&quot;Cost: &quot; + ProductCost) ProductExpiration = input(&quot;Is this product expired? yes/no&quot;) print(&quot;Expired: &quot; + ProductExpiration) if (ProductExpiration == &quot;yes&quot;): print(&quot;this product is no good&quot;); else: if (ProductCost &gt; &quot;50&quot; and ProductExpiration == &quot;no&quot;): print(&quot;this product is too expensive&quot;) else: if(&quot;50&quot; &gt;= ProductCost &gt;= &quot;20&quot; and ProductExpiration == &quot;no&quot;): print(&quot;this is a regular product&quot;) else: if (&quot;20&quot; &gt; ProductCost &gt;= &quot;0&quot; and ProductExpiration == &quot;no&quot;): print(&quot;this is a cheap product&quot;) . Cost: 30 Expired: no this is a regular product . grade1 = 90 grade2 = 65 grade3 = 60 grade4 = 75 grade5 = 95 print((grade1 + grade2 + grade3 + grade4 + grade5)/5) . 77.0 . print(&quot;1 &gt; 2 or 5 &lt; 12:&quot;, 1 &gt; 2 or 5 &lt; 12) # Output TRUE using OR ^ # Output FALSE using NOT print(&quot;24 &gt; 8:&quot;, not 24 &gt; 8) # Output FALSE using AND print(&quot;10 &gt; 20:&quot;, 10 &gt; 20 and false) . 1 &gt; 2 or 5 &lt; 12: True 24 &gt; 8: False 10 &gt; 20: False . num1 = int(input()) num2 = int(input()) sum = num1 + num2 if sum == 200: print(&quot;200&quot;) else: print(sum) . 200 . person = int(input()) if person &lt; 8: print(&quot;person makes 50k&quot;) else: if 10 &gt; person &gt;= 8: print(&quot;person makes 90k&quot;) else: print(&quot;person makes 150k&quot;) . person makes 150k .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/12/02/Booleans-and-Conditionals-Hw.html",
            "relUrl": "/2022/12/02/Booleans-and-Conditionals-Hw.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Mathematical Expression and Strings",
            "content": "Mathematical Expression and Strings . Algorithms . An algorithm: a set of instructions that can accomplish a specific task . An Algorithm has three . Sequencing: Algorithms do taks in the order of specification | Selection: Helps choose two different outcomes based off a decision | Iteration: If a conditions is true, then the code can repeat | Algorithms can be Represented in Two Ways . 1.Flowcharts: Use shapes and arrows to represent the steps of an algorithm . Aflowcharts use shapes and arrows to represent the steps of an algorithm . different shapes represent different functions | For example, the circle represents the start and end whereas an arrow represents a relationship between relative shapes. There is also a rectangle, parallelogram, and diamond which have their specific functions. | Pseudocode: A blend of human language and coding format | . Arithmetic Operations . Arithmetic operations exist in most programming languages . Basic Operations . Subtraction: . represented by “-“ Ex: num1 = 2 - 1 | . Addition: . represented by “+” Ex: num1 = 2 +1 | . Multiplication . represented by “*” Ex: num1 = 2 * 1 | . Division . represented by “/” num1 = 2/1 | . Getting the Remainder represented by “MOD” (% in python) num1 = 5 % 2 . Different Uses . Items can be numbers or variables Example: num1 = 10 num2 = num1 -25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . operations in parentheses should be done first | division and multiplication should be done before addition and subtraction | modulus works similar to multiplication and division Example: Evaluate num1 num1 = 9 % 2 * (8 - 2) + 8 / (6 - 4) num1 = 10.0 | . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable | Value of another variable stored in a variable | result of an operation stored in a variable | Result of a procedure call stored in a variable | score = 0 score = newScore score = newScore + 2 avgScore = allscores(20, 60, 80) . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 num2 = num1 + num3 Vs. num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 num1 = num2 + num3 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 print(var1) print(var2) print(var3) .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2022/11/29/mathematical-expressions-and-strings.html",
            "relUrl": "/markdown/2022/11/29/mathematical-expressions-and-strings.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Title",
            "content": "Num1 = 50 Num2 = Num1 % 9 + 15 # Num2 = 20 Num3 = Num2 / Num1 + ( Num2 * 2 ) # Num3 = 40 2/5 Num4 = Num3 + Num1 / 5 - 10 # Num4 = 40 2/5 Result = Num4 - Num2 # Result = 20 2/5 print(Result) . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 # Num2 = 4 Num1 = Num2 #Num1 = 4 Num3 = Num1 * 3 # Num3 = 12 Result = Num3 % 2 # Result = 0 print(Result) . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA # valueB = 17 - 4 = 13 valueA = valueA * 10 # valueA = 40 if valueB &gt; 10: print(valueC) # valueB is greater than 10 therefore output is valueC = 17 . 17 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) #concat . straightbrownshort . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len1 = str(len1) len2 = len(cookie2) * 45 len2 = str(len2) vote1 = cookie + &quot; vote: &quot; + len2 vote2 = cookie2 + &quot; vote: &quot; + len1 votes = vote1 + &quot; &quot; + vote2 print(votes) . choclate vote: 225 rasin vote: 4.0 .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/11/29/Second-Hacks-Homework.html",
            "relUrl": "/2022/11/29/Second-Hacks-Homework.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Variables, Assignments, and Abstractions",
            "content": "Variables, Assignments, and Data Abstractions . An abstraction inside a program that can hold a value . Naming Variables . Tip: Make variables simple, easy to read, and relatively general for efficient code Ex: Do: highscore Don’t: highestscoreinthegame . Types of Data . Integer: numbers | Text: words | Boolean: states if something is true or false | Assignments . allows a program to be change the value represented by a variable assigns values to varibales . Examples . Example 1 a=1 a=b a=2 print(b) b=1 . will take the most recent value | . Example 2 num1 = 5 num2 = 9 num1 = num2 print(num1) 9 print(num2) 9 . Data Abstraction . represent data in a useful form; manages complexity . List and Indexes start at 1 | Maximum number is the # of elements in the list | string = ordered sequencce of characters | . 3 Types of List operations . Assigning values to a list of certain indicies | Creating an empty list and assigning it values | Assigning a copy of a list |",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2022/11/28/Variables-Assignments-Abstractions.html",
            "relUrl": "/markdown/2022/11/28/Variables-Assignments-Abstractions.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Title",
            "content": "QUESTIONS = { &quot;Which keyword do you use to loop over a given list of elements&quot;: [ &quot;for&quot;, &quot;while&quot;, &quot;each&quot;, &quot;loop&quot; ], &quot;What&#39;s the purpose of the built-in zip() function&quot;: [ &quot;To iterate over two or more sequences at the same time&quot;, &quot;To combine several strings into one&quot;, &quot;To compress several files into one archive&quot;, &quot;To get information from the user&quot;, ], &quot;What&#39;s the name of Python&#39;s sorting algorithm&quot;: [ &quot;Timsort&quot;, &quot;Quicksort&quot;, &quot;Merge sort&quot;, &quot;Bubble sort&quot; ], } for question, alternatives in QUESTIONS.items(): correct_answer = alternatives[0] sorted_alternatives = sorted(alternatives) for label, alternative in enumerate(sorted_alternatives): print(f&quot; {label}) {alternative}&quot;) answer_label = int(input(f&quot;{question}? &quot;)) answer = sorted_alternatives[answer_label] if answer == correct_answer: print(&quot;Correct!&quot;) else: print(f&quot;The answer is {correct_answer!r}, not {answer!r}&quot;) . 0) each 1) for 2) loop 3) while Correct! 0) To combine several strings into one 1) To compress several files into one archive 2) To get information from the user 3) To iterate over two or more sequences at the same time The answer is &#39;To iterate over two or more sequences at the same time&#39;, not &#39;To get information from the user&#39; 0) Bubble sort 1) Merge sort 2) Quicksort 3) Timsort The answer is &#39;Timsort&#39;, not &#39;Merge sort&#39; .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/11/28/First-Hacks-Homework.html",
            "relUrl": "/2022/11/28/First-Hacks-Homework.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Markdown File",
            "content": "Markdown File . Favorite Food . My favorite food is: . Pizza . Pizza is the best because it is a wonderful combination of cheese, tomatoes, and dough. I like my Pizza best at Pizza Hut. . Hobbies . Soccer, Drawing, Running . . Lists . Best places to visit: . Italy | Japan | Nepal | . Best Soccer Players: . Ronaldo | Messi | Images . .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2022/11/18/markdown.html",
            "relUrl": "/markdown/2022/11/18/markdown.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Title",
            "content": "print(&quot;Hello World&quot;) . Hello World .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/11/18/hello-world.html",
            "relUrl": "/2022/11/18/hello-world.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Title",
            "content": "echo &quot;show the shell&quot; . show the shell .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/2022/11/18/Bash.html",
            "relUrl": "/2022/11/18/Bash.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . . .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post35": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is not a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jonathanwuz.github.io/Jonathan-Wu-s-Repository/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}